Nonterminals useless in grammar

    func_stmt
    dict
    dict_list
    dict_item
    array
    array_list
    item


Terminals unused in grammar

    NULL
    ':'
    '['
    ']'


Rules useless in grammar

   52 func_stmt: RETURN expression ';'
   53          | statement_list RETURN expression ';'

   54 dict: '{' dict_list '}'

   55 dict_list: dict_list ',' dict_item
   56          | dict_item

   57 dict_item: STRING ':' constant_as_operand

   58 array: '[' array_list ']'

   59 array_list: array_list ',' item
   60           | item

   61 item: constant_as_operand
   62     | array
   63     | dict


State 17 conflicts: 1 reduce/reduce
State 37 conflicts: 9 shift/reduce
State 39 conflicts: 13 shift/reduce
State 56 conflicts: 2 reduce/reduce
State 68 conflicts: 13 shift/reduce
State 69 conflicts: 13 shift/reduce
State 70 conflicts: 13 shift/reduce
State 71 conflicts: 13 shift/reduce
State 72 conflicts: 13 shift/reduce
State 73 conflicts: 13 shift/reduce
State 74 conflicts: 9 shift/reduce
State 75 conflicts: 9 shift/reduce
State 76 conflicts: 9 shift/reduce
State 77 conflicts: 9 shift/reduce
State 78 conflicts: 13 shift/reduce
State 79 conflicts: 13 shift/reduce
State 80 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: statement_list

    2 statement_list: statement_list statement
    3               | statement

    4 block_statement: '{' statement_list '}'

    5 function: FN '(' args ')' block_statement

    6 func_call: NAME '(' exp_list ')'

    7 exp_list: exp_list ',' expression
    8         | expression

    9 args: args ',' NAME
   10     | NAME

   11 statement: let_statement
   12          | assignment_statement
   13          | return_statement
   14          | if_statement
   15          | exp_statement
   16          | func_def
   17          | func_call

   18 func_def: NAME '(' args ')' block_statement

   19 let_statement: LET NAME '=' expression ';'

   20 assignment_statement: NAME '=' expression ';'

   21 exp_statement: expression ';'

   22 return_statement: RETURN expression ';'

   23 if_statement: IF '(' expression ')' block_statement ELSE block_statement
   24             | IF '(' expression ')' block_statement

   25 expression: prefix
   26           | rel_exp
   27           | '(' expression ')'
   28           | function
   29           | func_call
   30           | NAME
   31           | constant_as_operand

   32 prefix: '-' expression
   33       | '!' expression

   34 rel_exp: expression '+' expression
   35        | expression '-' expression
   36        | expression '*' expression
   37        | expression '/' expression
   38        | expression '%' expression
   39        | expression EQ expression
   40        | expression NE expression
   41        | expression '<' expression
   42        | expression LE expression
   43        | expression '>' expression
   44        | expression GE expression
   45        | expression AND expression
   46        | expression OR expression

   47 constant_as_operand: INT_CONST
   48                    | FLT_CONST
   49                    | TRUE_CONST
   50                    | FALSE_CONST
   51                    | STRING


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 33
    '%' (37) 38
    '(' (40) 5 6 18 23 24 27
    ')' (41) 5 6 18 23 24 27
    '*' (42) 36
    '+' (43) 34
    ',' (44) 7 9
    '-' (45) 32 35
    '/' (47) 37
    ':' (58)
    ';' (59) 19 20 21 22
    '<' (60) 41
    '=' (61) 19 20
    '>' (62) 43
    '[' (91)
    ']' (93)
    '{' (123) 4
    '}' (125) 4
    error (256)
    INT_CONST <name> (258) 47
    FLT_CONST <name> (259) 48
    NAME <name> (260) 6 9 10 18 19 20 30
    NULL <name> (261)
    STRING <name> (262) 51
    TRUE_CONST <name> (263) 49
    FALSE_CONST <name> (264) 50
    LET (265) 19
    RETURN (266) 22
    IF (267) 23 24
    ELSE (268) 23
    FN (269) 5
    AND (270) 45
    OR (271) 46
    NE (272) 40
    EQ (273) 39
    GE (274) 44
    LE (275) 42
    IFX (276)
    Uminus (277)


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    program (42)
        on left: 1
        on right: 0
    statement_list (43)
        on left: 2 3
        on right: 1 2 4
    block_statement (44)
        on left: 4
        on right: 5 18 23 24
    function (45)
        on left: 5
        on right: 28
    func_call (46)
        on left: 6
        on right: 17 29
    exp_list (47)
        on left: 7 8
        on right: 6 7
    args (48)
        on left: 9 10
        on right: 5 9 18
    statement (49)
        on left: 11 12 13 14 15 16 17
        on right: 2 3
    func_def (50)
        on left: 18
        on right: 16
    let_statement (51)
        on left: 19
        on right: 11
    assignment_statement (52)
        on left: 20
        on right: 12
    exp_statement (53)
        on left: 21
        on right: 15
    return_statement (54)
        on left: 22
        on right: 13
    if_statement (55)
        on left: 23 24
        on right: 14
    expression <exp> (56)
        on left: 25 26 27 28 29 30 31
        on right: 7 8 19 20 21 22 23 24 27 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
    prefix (57)
        on left: 32 33
        on right: 25
    rel_exp (58)
        on left: 34 35 36 37 38 39 40 41 42 43 44 45 46
        on right: 26
    constant_as_operand (59)
        on left: 47 48 49 50 51
        on right: 31


State 0

    0 $accept: • program $end

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 3
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    LET          shift, and go to state 7
    RETURN       shift, and go to state 8
    IF           shift, and go to state 9
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    program               go to state 14
    statement_list        go to state 15
    function              go to state 16
    func_call             go to state 17
    statement             go to state 18
    func_def              go to state 19
    let_statement         go to state 20
    assignment_statement  go to state 21
    exp_statement         go to state 22
    return_statement      go to state 23
    if_statement          go to state 24
    expression            go to state 25
    prefix                go to state 26
    rel_exp               go to state 27
    constant_as_operand   go to state 28


State 1

   47 constant_as_operand: INT_CONST •

    $default  reduce using rule 47 (constant_as_operand)


State 2

   48 constant_as_operand: FLT_CONST •

    $default  reduce using rule 48 (constant_as_operand)


State 3

    6 func_call: NAME • '(' exp_list ')'
   18 func_def: NAME • '(' args ')' block_statement
   20 assignment_statement: NAME • '=' expression ';'
   30 expression: NAME •

    '('  shift, and go to state 29
    '='  shift, and go to state 30

    $default  reduce using rule 30 (expression)


State 4

   51 constant_as_operand: STRING •

    $default  reduce using rule 51 (constant_as_operand)


State 5

   49 constant_as_operand: TRUE_CONST •

    $default  reduce using rule 49 (constant_as_operand)


State 6

   50 constant_as_operand: FALSE_CONST •

    $default  reduce using rule 50 (constant_as_operand)


State 7

   19 let_statement: LET • NAME '=' expression ';'

    NAME  shift, and go to state 31


State 8

   22 return_statement: RETURN • expression ';'

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 34
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 9

   23 if_statement: IF • '(' expression ')' block_statement ELSE block_statement
   24             | IF • '(' expression ')' block_statement

    '('  shift, and go to state 35


State 10

    5 function: FN • '(' args ')' block_statement

    '('  shift, and go to state 36


State 11

   32 prefix: '-' • expression

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 37
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 12

   27 expression: '(' • expression ')'

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 38
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 13

   33 prefix: '!' • expression

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 39
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 14

    0 $accept: program • $end

    $end  shift, and go to state 40


State 15

    1 program: statement_list •
    2 statement_list: statement_list • statement

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 3
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    LET          shift, and go to state 7
    RETURN       shift, and go to state 8
    IF           shift, and go to state 9
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    $default  reduce using rule 1 (program)

    function              go to state 16
    func_call             go to state 17
    statement             go to state 41
    func_def              go to state 19
    let_statement         go to state 20
    assignment_statement  go to state 21
    exp_statement         go to state 22
    return_statement      go to state 23
    if_statement          go to state 24
    expression            go to state 25
    prefix                go to state 26
    rel_exp               go to state 27
    constant_as_operand   go to state 28


State 16

   28 expression: function •

    $default  reduce using rule 28 (expression)


State 17

   17 statement: func_call •
   29 expression: func_call •

    AND       reduce using rule 29 (expression)
    OR        reduce using rule 29 (expression)
    NE        reduce using rule 29 (expression)
    EQ        reduce using rule 29 (expression)
    GE        reduce using rule 29 (expression)
    LE        reduce using rule 29 (expression)
    '+'       reduce using rule 29 (expression)
    '-'       reduce using rule 17 (statement)
    '-'       [reduce using rule 29 (expression)]
    '*'       reduce using rule 29 (expression)
    '/'       reduce using rule 29 (expression)
    ';'       reduce using rule 29 (expression)
    '%'       reduce using rule 29 (expression)
    '<'       reduce using rule 29 (expression)
    '>'       reduce using rule 29 (expression)
    $default  reduce using rule 17 (statement)


State 18

    3 statement_list: statement •

    $default  reduce using rule 3 (statement_list)


State 19

   16 statement: func_def •

    $default  reduce using rule 16 (statement)


State 20

   11 statement: let_statement •

    $default  reduce using rule 11 (statement)


State 21

   12 statement: assignment_statement •

    $default  reduce using rule 12 (statement)


State 22

   15 statement: exp_statement •

    $default  reduce using rule 15 (statement)


State 23

   13 statement: return_statement •

    $default  reduce using rule 13 (statement)


State 24

   14 statement: if_statement •

    $default  reduce using rule 14 (statement)


State 25

   21 exp_statement: expression • ';'
   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 52
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55


State 26

   25 expression: prefix •

    $default  reduce using rule 25 (expression)


State 27

   26 expression: rel_exp •

    $default  reduce using rule 26 (expression)


State 28

   31 expression: constant_as_operand •

    $default  reduce using rule 31 (expression)


State 29

    6 func_call: NAME '(' • exp_list ')'
   18 func_def: NAME '(' • args ')' block_statement

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 56
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    exp_list             go to state 57
    args                 go to state 58
    expression           go to state 59
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 30

   20 assignment_statement: NAME '=' • expression ';'

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 60
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 31

   19 let_statement: LET NAME • '=' expression ';'

    '='  shift, and go to state 61


State 32

    6 func_call: NAME • '(' exp_list ')'
   30 expression: NAME •

    '('  shift, and go to state 62

    $default  reduce using rule 30 (expression)


State 33

   29 expression: func_call •

    $default  reduce using rule 29 (expression)


State 34

   22 return_statement: RETURN expression • ';'
   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 63
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55


State 35

   23 if_statement: IF '(' • expression ')' block_statement ELSE block_statement
   24             | IF '(' • expression ')' block_statement

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 64
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 36

    5 function: FN '(' • args ')' block_statement

    NAME  shift, and go to state 65

    args  go to state 66


State 37

   32 prefix: '-' expression •
   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    AND       [reduce using rule 32 (prefix)]
    OR        [reduce using rule 32 (prefix)]
    NE        [reduce using rule 32 (prefix)]
    EQ        [reduce using rule 32 (prefix)]
    GE        [reduce using rule 32 (prefix)]
    LE        [reduce using rule 32 (prefix)]
    '%'       [reduce using rule 32 (prefix)]
    '<'       [reduce using rule 32 (prefix)]
    '>'       [reduce using rule 32 (prefix)]
    $default  reduce using rule 32 (prefix)


State 38

   27 expression: '(' expression • ')'
   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ')'  shift, and go to state 67
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55


State 39

   33 prefix: '!' expression •
   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    AND       [reduce using rule 33 (prefix)]
    OR        [reduce using rule 33 (prefix)]
    NE        [reduce using rule 33 (prefix)]
    EQ        [reduce using rule 33 (prefix)]
    GE        [reduce using rule 33 (prefix)]
    LE        [reduce using rule 33 (prefix)]
    '+'       [reduce using rule 33 (prefix)]
    '-'       [reduce using rule 33 (prefix)]
    '*'       [reduce using rule 33 (prefix)]
    '/'       [reduce using rule 33 (prefix)]
    '%'       [reduce using rule 33 (prefix)]
    '<'       [reduce using rule 33 (prefix)]
    '>'       [reduce using rule 33 (prefix)]
    $default  reduce using rule 33 (prefix)


State 40

    0 $accept: program $end •

    $default  accept


State 41

    2 statement_list: statement_list statement •

    $default  reduce using rule 2 (statement_list)


State 42

   45 rel_exp: expression AND • expression

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 68
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 43

   46 rel_exp: expression OR • expression

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 69
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 44

   40 rel_exp: expression NE • expression

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 70
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 45

   39 rel_exp: expression EQ • expression

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 71
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 46

   44 rel_exp: expression GE • expression

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 72
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 47

   42 rel_exp: expression LE • expression

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 73
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 48

   34 rel_exp: expression '+' • expression

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 74
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 49

   35 rel_exp: expression '-' • expression

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 75
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 50

   36 rel_exp: expression '*' • expression

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 76
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 51

   37 rel_exp: expression '/' • expression

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 77
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 52

   21 exp_statement: expression ';' •

    $default  reduce using rule 21 (exp_statement)


State 53

   38 rel_exp: expression '%' • expression

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 78
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 54

   41 rel_exp: expression '<' • expression

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 79
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 55

   43 rel_exp: expression '>' • expression

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 80
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 56

    6 func_call: NAME • '(' exp_list ')'
   10 args: NAME •
   30 expression: NAME •

    '('  shift, and go to state 62

    ')'       reduce using rule 10 (args)
    ')'       [reduce using rule 30 (expression)]
    ','       reduce using rule 10 (args)
    ','       [reduce using rule 30 (expression)]
    $default  reduce using rule 30 (expression)


State 57

    6 func_call: NAME '(' exp_list • ')'
    7 exp_list: exp_list • ',' expression

    ')'  shift, and go to state 81
    ','  shift, and go to state 82


State 58

    9 args: args • ',' NAME
   18 func_def: NAME '(' args • ')' block_statement

    ')'  shift, and go to state 83
    ','  shift, and go to state 84


State 59

    8 exp_list: expression •
   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    $default  reduce using rule 8 (exp_list)


State 60

   20 assignment_statement: NAME '=' expression • ';'
   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 85
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55


State 61

   19 let_statement: LET NAME '=' • expression ';'

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 86
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 62

    6 func_call: NAME '(' • exp_list ')'

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    exp_list             go to state 57
    expression           go to state 59
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 63

   22 return_statement: RETURN expression ';' •

    $default  reduce using rule 22 (return_statement)


State 64

   23 if_statement: IF '(' expression • ')' block_statement ELSE block_statement
   24             | IF '(' expression • ')' block_statement
   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ')'  shift, and go to state 87
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55


State 65

   10 args: NAME •

    $default  reduce using rule 10 (args)


State 66

    5 function: FN '(' args • ')' block_statement
    9 args: args • ',' NAME

    ')'  shift, and go to state 88
    ','  shift, and go to state 84


State 67

   27 expression: '(' expression ')' •

    $default  reduce using rule 27 (expression)


State 68

   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   45        | expression AND expression •
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    AND       [reduce using rule 45 (rel_exp)]
    OR        [reduce using rule 45 (rel_exp)]
    NE        [reduce using rule 45 (rel_exp)]
    EQ        [reduce using rule 45 (rel_exp)]
    GE        [reduce using rule 45 (rel_exp)]
    LE        [reduce using rule 45 (rel_exp)]
    '+'       [reduce using rule 45 (rel_exp)]
    '-'       [reduce using rule 45 (rel_exp)]
    '*'       [reduce using rule 45 (rel_exp)]
    '/'       [reduce using rule 45 (rel_exp)]
    '%'       [reduce using rule 45 (rel_exp)]
    '<'       [reduce using rule 45 (rel_exp)]
    '>'       [reduce using rule 45 (rel_exp)]
    $default  reduce using rule 45 (rel_exp)


State 69

   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression
   46        | expression OR expression •

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    AND       [reduce using rule 46 (rel_exp)]
    OR        [reduce using rule 46 (rel_exp)]
    NE        [reduce using rule 46 (rel_exp)]
    EQ        [reduce using rule 46 (rel_exp)]
    GE        [reduce using rule 46 (rel_exp)]
    LE        [reduce using rule 46 (rel_exp)]
    '+'       [reduce using rule 46 (rel_exp)]
    '-'       [reduce using rule 46 (rel_exp)]
    '*'       [reduce using rule 46 (rel_exp)]
    '/'       [reduce using rule 46 (rel_exp)]
    '%'       [reduce using rule 46 (rel_exp)]
    '<'       [reduce using rule 46 (rel_exp)]
    '>'       [reduce using rule 46 (rel_exp)]
    $default  reduce using rule 46 (rel_exp)


State 70

   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   40        | expression NE expression •
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    AND       [reduce using rule 40 (rel_exp)]
    OR        [reduce using rule 40 (rel_exp)]
    NE        [reduce using rule 40 (rel_exp)]
    EQ        [reduce using rule 40 (rel_exp)]
    GE        [reduce using rule 40 (rel_exp)]
    LE        [reduce using rule 40 (rel_exp)]
    '+'       [reduce using rule 40 (rel_exp)]
    '-'       [reduce using rule 40 (rel_exp)]
    '*'       [reduce using rule 40 (rel_exp)]
    '/'       [reduce using rule 40 (rel_exp)]
    '%'       [reduce using rule 40 (rel_exp)]
    '<'       [reduce using rule 40 (rel_exp)]
    '>'       [reduce using rule 40 (rel_exp)]
    $default  reduce using rule 40 (rel_exp)


State 71

   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   39        | expression EQ expression •
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    AND       [reduce using rule 39 (rel_exp)]
    OR        [reduce using rule 39 (rel_exp)]
    NE        [reduce using rule 39 (rel_exp)]
    EQ        [reduce using rule 39 (rel_exp)]
    GE        [reduce using rule 39 (rel_exp)]
    LE        [reduce using rule 39 (rel_exp)]
    '+'       [reduce using rule 39 (rel_exp)]
    '-'       [reduce using rule 39 (rel_exp)]
    '*'       [reduce using rule 39 (rel_exp)]
    '/'       [reduce using rule 39 (rel_exp)]
    '%'       [reduce using rule 39 (rel_exp)]
    '<'       [reduce using rule 39 (rel_exp)]
    '>'       [reduce using rule 39 (rel_exp)]
    $default  reduce using rule 39 (rel_exp)


State 72

   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   44        | expression GE expression •
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    AND       [reduce using rule 44 (rel_exp)]
    OR        [reduce using rule 44 (rel_exp)]
    NE        [reduce using rule 44 (rel_exp)]
    EQ        [reduce using rule 44 (rel_exp)]
    GE        [reduce using rule 44 (rel_exp)]
    LE        [reduce using rule 44 (rel_exp)]
    '+'       [reduce using rule 44 (rel_exp)]
    '-'       [reduce using rule 44 (rel_exp)]
    '*'       [reduce using rule 44 (rel_exp)]
    '/'       [reduce using rule 44 (rel_exp)]
    '%'       [reduce using rule 44 (rel_exp)]
    '<'       [reduce using rule 44 (rel_exp)]
    '>'       [reduce using rule 44 (rel_exp)]
    $default  reduce using rule 44 (rel_exp)


State 73

   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   42        | expression LE expression •
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    AND       [reduce using rule 42 (rel_exp)]
    OR        [reduce using rule 42 (rel_exp)]
    NE        [reduce using rule 42 (rel_exp)]
    EQ        [reduce using rule 42 (rel_exp)]
    GE        [reduce using rule 42 (rel_exp)]
    LE        [reduce using rule 42 (rel_exp)]
    '+'       [reduce using rule 42 (rel_exp)]
    '-'       [reduce using rule 42 (rel_exp)]
    '*'       [reduce using rule 42 (rel_exp)]
    '/'       [reduce using rule 42 (rel_exp)]
    '%'       [reduce using rule 42 (rel_exp)]
    '<'       [reduce using rule 42 (rel_exp)]
    '>'       [reduce using rule 42 (rel_exp)]
    $default  reduce using rule 42 (rel_exp)


State 74

   34 rel_exp: expression • '+' expression
   34        | expression '+' expression •
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    AND       [reduce using rule 34 (rel_exp)]
    OR        [reduce using rule 34 (rel_exp)]
    NE        [reduce using rule 34 (rel_exp)]
    EQ        [reduce using rule 34 (rel_exp)]
    GE        [reduce using rule 34 (rel_exp)]
    LE        [reduce using rule 34 (rel_exp)]
    '%'       [reduce using rule 34 (rel_exp)]
    '<'       [reduce using rule 34 (rel_exp)]
    '>'       [reduce using rule 34 (rel_exp)]
    $default  reduce using rule 34 (rel_exp)


State 75

   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   35        | expression '-' expression •
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    AND       [reduce using rule 35 (rel_exp)]
    OR        [reduce using rule 35 (rel_exp)]
    NE        [reduce using rule 35 (rel_exp)]
    EQ        [reduce using rule 35 (rel_exp)]
    GE        [reduce using rule 35 (rel_exp)]
    LE        [reduce using rule 35 (rel_exp)]
    '%'       [reduce using rule 35 (rel_exp)]
    '<'       [reduce using rule 35 (rel_exp)]
    '>'       [reduce using rule 35 (rel_exp)]
    $default  reduce using rule 35 (rel_exp)


State 76

   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   36        | expression '*' expression •
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    AND       [reduce using rule 36 (rel_exp)]
    OR        [reduce using rule 36 (rel_exp)]
    NE        [reduce using rule 36 (rel_exp)]
    EQ        [reduce using rule 36 (rel_exp)]
    GE        [reduce using rule 36 (rel_exp)]
    LE        [reduce using rule 36 (rel_exp)]
    '%'       [reduce using rule 36 (rel_exp)]
    '<'       [reduce using rule 36 (rel_exp)]
    '>'       [reduce using rule 36 (rel_exp)]
    $default  reduce using rule 36 (rel_exp)


State 77

   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   37        | expression '/' expression •
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    AND       [reduce using rule 37 (rel_exp)]
    OR        [reduce using rule 37 (rel_exp)]
    NE        [reduce using rule 37 (rel_exp)]
    EQ        [reduce using rule 37 (rel_exp)]
    GE        [reduce using rule 37 (rel_exp)]
    LE        [reduce using rule 37 (rel_exp)]
    '%'       [reduce using rule 37 (rel_exp)]
    '<'       [reduce using rule 37 (rel_exp)]
    '>'       [reduce using rule 37 (rel_exp)]
    $default  reduce using rule 37 (rel_exp)


State 78

   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   38        | expression '%' expression •
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    AND       [reduce using rule 38 (rel_exp)]
    OR        [reduce using rule 38 (rel_exp)]
    NE        [reduce using rule 38 (rel_exp)]
    EQ        [reduce using rule 38 (rel_exp)]
    GE        [reduce using rule 38 (rel_exp)]
    LE        [reduce using rule 38 (rel_exp)]
    '+'       [reduce using rule 38 (rel_exp)]
    '-'       [reduce using rule 38 (rel_exp)]
    '*'       [reduce using rule 38 (rel_exp)]
    '/'       [reduce using rule 38 (rel_exp)]
    '%'       [reduce using rule 38 (rel_exp)]
    '<'       [reduce using rule 38 (rel_exp)]
    '>'       [reduce using rule 38 (rel_exp)]
    $default  reduce using rule 38 (rel_exp)


State 79

   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   41        | expression '<' expression •
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    AND       [reduce using rule 41 (rel_exp)]
    OR        [reduce using rule 41 (rel_exp)]
    NE        [reduce using rule 41 (rel_exp)]
    EQ        [reduce using rule 41 (rel_exp)]
    GE        [reduce using rule 41 (rel_exp)]
    LE        [reduce using rule 41 (rel_exp)]
    '+'       [reduce using rule 41 (rel_exp)]
    '-'       [reduce using rule 41 (rel_exp)]
    '*'       [reduce using rule 41 (rel_exp)]
    '/'       [reduce using rule 41 (rel_exp)]
    '%'       [reduce using rule 41 (rel_exp)]
    '<'       [reduce using rule 41 (rel_exp)]
    '>'       [reduce using rule 41 (rel_exp)]
    $default  reduce using rule 41 (rel_exp)


State 80

   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   43        | expression '>' expression •
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    AND       [reduce using rule 43 (rel_exp)]
    OR        [reduce using rule 43 (rel_exp)]
    NE        [reduce using rule 43 (rel_exp)]
    EQ        [reduce using rule 43 (rel_exp)]
    GE        [reduce using rule 43 (rel_exp)]
    LE        [reduce using rule 43 (rel_exp)]
    '+'       [reduce using rule 43 (rel_exp)]
    '-'       [reduce using rule 43 (rel_exp)]
    '*'       [reduce using rule 43 (rel_exp)]
    '/'       [reduce using rule 43 (rel_exp)]
    '%'       [reduce using rule 43 (rel_exp)]
    '<'       [reduce using rule 43 (rel_exp)]
    '>'       [reduce using rule 43 (rel_exp)]
    $default  reduce using rule 43 (rel_exp)


State 81

    6 func_call: NAME '(' exp_list ')' •

    $default  reduce using rule 6 (func_call)


State 82

    7 exp_list: exp_list ',' • expression

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 32
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function             go to state 16
    func_call            go to state 33
    expression           go to state 89
    prefix               go to state 26
    rel_exp              go to state 27
    constant_as_operand  go to state 28


State 83

   18 func_def: NAME '(' args ')' • block_statement

    '{'  shift, and go to state 90

    block_statement  go to state 91


State 84

    9 args: args ',' • NAME

    NAME  shift, and go to state 92


State 85

   20 assignment_statement: NAME '=' expression ';' •

    $default  reduce using rule 20 (assignment_statement)


State 86

   19 let_statement: LET NAME '=' expression • ';'
   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    ';'  shift, and go to state 93
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55


State 87

   23 if_statement: IF '(' expression ')' • block_statement ELSE block_statement
   24             | IF '(' expression ')' • block_statement

    '{'  shift, and go to state 90

    block_statement  go to state 94


State 88

    5 function: FN '(' args ')' • block_statement

    '{'  shift, and go to state 90

    block_statement  go to state 95


State 89

    7 exp_list: exp_list ',' expression •
   34 rel_exp: expression • '+' expression
   35        | expression • '-' expression
   36        | expression • '*' expression
   37        | expression • '/' expression
   38        | expression • '%' expression
   39        | expression • EQ expression
   40        | expression • NE expression
   41        | expression • '<' expression
   42        | expression • LE expression
   43        | expression • '>' expression
   44        | expression • GE expression
   45        | expression • AND expression
   46        | expression • OR expression

    AND  shift, and go to state 42
    OR   shift, and go to state 43
    NE   shift, and go to state 44
    EQ   shift, and go to state 45
    GE   shift, and go to state 46
    LE   shift, and go to state 47
    '+'  shift, and go to state 48
    '-'  shift, and go to state 49
    '*'  shift, and go to state 50
    '/'  shift, and go to state 51
    '%'  shift, and go to state 53
    '<'  shift, and go to state 54
    '>'  shift, and go to state 55

    $default  reduce using rule 7 (exp_list)


State 90

    4 block_statement: '{' • statement_list '}'

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 3
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    LET          shift, and go to state 7
    RETURN       shift, and go to state 8
    IF           shift, and go to state 9
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    statement_list        go to state 96
    function              go to state 16
    func_call             go to state 17
    statement             go to state 18
    func_def              go to state 19
    let_statement         go to state 20
    assignment_statement  go to state 21
    exp_statement         go to state 22
    return_statement      go to state 23
    if_statement          go to state 24
    expression            go to state 25
    prefix                go to state 26
    rel_exp               go to state 27
    constant_as_operand   go to state 28


State 91

   18 func_def: NAME '(' args ')' block_statement •

    $default  reduce using rule 18 (func_def)


State 92

    9 args: args ',' NAME •

    $default  reduce using rule 9 (args)


State 93

   19 let_statement: LET NAME '=' expression ';' •

    $default  reduce using rule 19 (let_statement)


State 94

   23 if_statement: IF '(' expression ')' block_statement • ELSE block_statement
   24             | IF '(' expression ')' block_statement •

    ELSE  shift, and go to state 97

    $default  reduce using rule 24 (if_statement)


State 95

    5 function: FN '(' args ')' block_statement •

    $default  reduce using rule 5 (function)


State 96

    2 statement_list: statement_list • statement
    4 block_statement: '{' statement_list • '}'

    INT_CONST    shift, and go to state 1
    FLT_CONST    shift, and go to state 2
    NAME         shift, and go to state 3
    STRING       shift, and go to state 4
    TRUE_CONST   shift, and go to state 5
    FALSE_CONST  shift, and go to state 6
    LET          shift, and go to state 7
    RETURN       shift, and go to state 8
    IF           shift, and go to state 9
    FN           shift, and go to state 10
    '-'          shift, and go to state 11
    '}'          shift, and go to state 98
    '('          shift, and go to state 12
    '!'          shift, and go to state 13

    function              go to state 16
    func_call             go to state 17
    statement             go to state 41
    func_def              go to state 19
    let_statement         go to state 20
    assignment_statement  go to state 21
    exp_statement         go to state 22
    return_statement      go to state 23
    if_statement          go to state 24
    expression            go to state 25
    prefix                go to state 26
    rel_exp               go to state 27
    constant_as_operand   go to state 28


State 97

   23 if_statement: IF '(' expression ')' block_statement ELSE • block_statement

    '{'  shift, and go to state 90

    block_statement  go to state 99


State 98

    4 block_statement: '{' statement_list '}' •

    $default  reduce using rule 4 (block_statement)


State 99

   23 if_statement: IF '(' expression ')' block_statement ELSE block_statement •

    $default  reduce using rule 23 (if_statement)
